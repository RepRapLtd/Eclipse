/*
 * Painter.h
 *
 *  Created on: 3 Oct 2016
 *      Author: ensab
 */

#ifndef PAINTER_H_
#define PAINTER_H_

class Painter
{
public:
	Painter(const IplImage* original);
	Run();


private:
	void showResult(IplImage* img);
	uchar GetPixelMono(IplImage* img, int x, int y);
	void PutPixelMono(IplImage* img, int x, int y, uchar p);
	void GetPixel(IplImage* img, int x, int y, uchar p[]);
	void PutPixel(IplImage* img, int x, int y, uchar p[]);
	uchar Percentile(uchar array[], double percentile, int length);
	uchar Percentile(IplImage* img, double percentile);
	void GoWhite(IplImage* img);
	void Threshold(IplImage* image, double percentile);
	void Blob(IplImage* image, Point pixel, uchar colour[], double d);
	void Stroke(IplImage* image, Point pixels[], int count, uchar colour[], double d);
	uint PixelDifference2(uchar a[], uchar b[]);
	uchar PixelDifference(uchar a[], uchar b[]);
	void ImageDifference(IplImage* a, IplImage* b);


	int frameCount;
	uchar* pixelsAsList;
	int pixelCount;
	int imageWidth;
	int imageHeight;
	IplImage* difference;

};



#endif /* PAINTER_H_ */
